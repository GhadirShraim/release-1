<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="Checkout">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Single Shipping Scenario
-----------------------------
This pipeline implements the logic for the default (single) shipping scenario. It is responsible for dealing with one shipment only, respectively one shipping addresses as well as one shipping method.</description>
        </text-node>
        <node-display width="3" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Start">
    <segment>
      <node>
        <start-node call-mode="public" name="Start" secure="true"/>
        <node-display x="2" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="LoginBarrier-Check"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="COShipping-GetShippingAddress"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="Cart-Show"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COShipping-RequiresMultiShipping"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="no">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="COShipping-InitForms"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="COShipping-PrepareShipments"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Cart-Calculate"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="Basket.productLineItems.size() &gt; 0" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="UpdatePageMetaData" pipelet-set-identifier="bc_api">
                      <key-binding alias="null" key="DefaultKeywords"/>
                      <key-binding alias="null" key="DefaultDescription"/>
                      <key-binding alias="null" key="Product"/>
                      <key-binding alias="null" key="Category"/>
                      <key-binding alias="&quot;CosmoProf Checkout&quot;" key="DefaultTitle"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.Id.value" key="From_0"/>
                      <key-binding alias="CurrentAddId" key="To_0"/>
                      <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.country.value" key="From_1"/>
                      <key-binding alias="CountryId" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                      <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields" key="FormElement"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="CurrentAddId" key="From_0"/>
                      <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.Id.value" key="To_0"/>
                      <key-binding alias="CountryId" key="From_1"/>
                      <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.country.value" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <interaction-continue-node secure="true" start-name="SingleShipping" transaction-required="false">
                      <template buffered="true" dynamic="false" name="checkout/shipping/singleshipping"/>
                    </interaction-continue-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="save">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.phone.value.split(&quot;-&quot;)" key="From_0"/>
                            <key-binding alias="phoneNum" key="To_0"/>
                            <key-binding alias="phoneNum.join(&quot;&quot;)" key="From_1"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.phone.value" key="To_1"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <config-property key="OnError" value="PIPELET_ERROR"/>
                            <config-property key="ScriptFile" value="account/addressbook/CheckToSaveShippingAddress.ds"/>
                            <key-binding alias="ScriptLog" key="ScriptLog"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.Id.value" key="AddressID"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields" key="AddressForm"/>
                            <key-binding alias="Edited" key="Editable"/>
                          </pipelet-node>
                          <node-display x="1" y="0"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <call-node start-name-ref="COShipping-HandleShippingSettings"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="error">
                            <transition target-connector="in1" target-path="./b3.1/b4.3"/>
                          </branch>
                        </node>
                        <simple-transition/>
                        <node>
                          <call-node start-name-ref="COShipping-SaveAddress"/>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="true" key="From_0"/>
                            <key-binding alias="checkoutflow" key="To_0"/>
                            <key-binding alias="false" key="From_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields" key="From_1"/>
                            <key-binding alias="CurrentShippingAddress" key="To_1"/>
                            <key-binding alias="ReadFromBasket" key="To_2"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <decision-node condition-key="'customerType' in CurrentCustomer.profile.custom &amp;&amp; CurrentCustomer.profile.custom.customerType.value == 'C'" condition-operator="expr"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b3" source-connector="yes">
                            <transition target-connector="in"/>
                            <segment>
                              <node>
                                <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <config-property key="OnError" value="PIPELET_ERROR"/>
                                  <config-property key="ScriptFile" value="account/CreateAddressObject.ds"/>
                                  <key-binding alias="ScriptLog" key="ScriptLog"/>
                                  <key-binding alias="!empty(checkoutflow) ? CurrentShippingAddress :CurrentForms.profile.address" key="Form"/>
                                  <key-binding alias="AddressObject" key="AddressObject"/>
                                  <key-binding alias="!empty(checkoutflow) ? true : false" key="Checkout"/>
                                  <key-binding alias="CurrentCustomer.profile.email" key="email"/>
                                  <key-binding alias="CurrentCustomer" key="Customer"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                                <branch basename="b2" source-connector="error">
                                  <transition target-connector="in1" target-path="./b4.2"/>
                                </branch>
                              </node>
                              <simple-transition/>
                              <node>
                                <call-node start-name-ref="Address-VerifyDAV"/>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <decision-node condition-key="Edited" condition-operator="expr"/>
                                <node-display x="0" y="1"/>
                                <branch basename="b3" source-connector="yes">
                                  <transition target-connector="in">
                                    <transition-display>
                                      <bend-point relative-to="source" x="0" y="1"/>
                                    </transition-display>
                                  </transition>
                                  <segment>
                                    <node>
                                      <call-node start-name-ref="COShipping-CreateNewAddressForcardHolder"/>
                                      <node-display x="0" y="1"/>
                                      <branch basename="b2" source-connector="error">
                                        <transition target-connector="in1" target-path="../b4.1"/>
                                      </branch>
                                      <branch basename="b3" source-connector="ok">
                                        <transition target-connector="in1" target-path="../../+2"/>
                                      </branch>
                                    </node>
                                  </segment>
                                </branch>
                              </node>
                              <simple-transition/>
                              <node>
                                <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="true"/>
                                  <config-property key="OnError" value="PIPELET_ERROR"/>
                                  <config-property key="ScriptFile" value="account/addressbook/SetDefaultAddress.ds"/>
                                  <key-binding alias="ScriptLog" key="ScriptLog"/>
                                  <key-binding alias="!empty(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) ?CurrentCustomer.profile.getAddressBook().getAddress(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) :CurrentCustomer.profile.getAddressBook().getPreferredAddress()" key="CustomerAddress"/>
                                  <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
                                  <key-binding alias="Basket" key="Basket"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                                <branch basename="b4" source-connector="error">
                                  <transition target-connector="in1"/>
                                  <segment>
                                    <node>
                                      <join-node/>
                                      <node-display x="0" y="1"/>
                                    </node>
                                    <simple-transition>
                                      <transition-display>
                                        <bend-point relative-to="source" x="-1" y="-1"/>
                                        <bend-point relative-to="target" x="-1" y="0"/>
                                      </transition-display>
                                    </simple-transition>
                                    <node>
                                      <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                        <config-property key="Transactional" value="false"/>
                                        <key-binding alias="dw.web.Resource.msg('address.data.addrlabelerror','account',null)" key="From_0"/>
                                        <key-binding alias="ShippingAddrError" key="To_0"/>
                                        <key-binding alias="null" key="From_1"/>
                                        <key-binding alias="null" key="To_1"/>
                                        <key-binding alias="null" key="From_2"/>
                                        <key-binding alias="null" key="To_2"/>
                                        <key-binding alias="null" key="From_3"/>
                                        <key-binding alias="null" key="To_3"/>
                                        <key-binding alias="null" key="From_4"/>
                                        <key-binding alias="null" key="To_4"/>
                                        <key-binding alias="null" key="From_5"/>
                                        <key-binding alias="null" key="To_5"/>
                                        <key-binding alias="null" key="From_6"/>
                                        <key-binding alias="null" key="To_6"/>
                                        <key-binding alias="null" key="From_7"/>
                                        <key-binding alias="null" key="To_7"/>
                                        <key-binding alias="null" key="From_8"/>
                                        <key-binding alias="null" key="To_8"/>
                                        <key-binding alias="null" key="From_9"/>
                                        <key-binding alias="null" key="To_9"/>
                                      </pipelet-node>
                                      <node-display orientation="horizontal" x="0" y="-2"/>
                                    </node>
                                    <transition target-connector="in1" target-path="./+1">
                                      <transition-display>
                                        <bend-point relative-to="source" x="1" y="0"/>
                                        <bend-point relative-to="target" x="1" y="0"/>
                                      </transition-display>
                                    </transition>
                                  </segment>
                                  <segment>
                                    <node>
                                      <join-node/>
                                      <node-display x="0" y="-1"/>
                                    </node>
                                    <transition target-connector="in2" target-path="./+1"/>
                                  </segment>
                                  <segment>
                                    <node>
                                      <join-node/>
                                      <node-display x="0" y="-4"/>
                                    </node>
                                    <transition target-connector="in1" target-path="../../../+1"/>
                                  </segment>
                                </branch>
                              </node>
                              <transition target-connector="in1" target-path="../+1"/>
                            </segment>
                          </branch>
                        </node>
                        <transition target-connector="in1" target-path="./+1">
                          <transition-display>
                            <bend-point relative-to="source" x="4" y="0"/>
                          </transition-display>
                        </transition>
                      </segment>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="2" y="3"/>
                        </node>
                        <transition target-connector="in1" target-path="./+1">
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="4"/>
                          </transition-display>
                        </transition>
                      </segment>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="-2" y="2"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <call-node start-name-ref="COShipping-OutOfStcockProduct"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="ok">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="0" y="1"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <interaction-continue-node secure="false" start-name="COShipping" transaction-required="false">
                                  <template buffered="true" dynamic="false" name="checkout/outofstockproductoverlay"/>
                                </interaction-continue-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <call-node start-name-ref="COShipping-UpdateInStoreMessage"/>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="true" key="From_0"/>
                                  <key-binding alias="CurrentForms.singleshipping.fulfilled.value" key="To_0"/>
                                  <key-binding alias="null" key="From_1"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition/>
                              <node>
                                <call-node start-name-ref="SDD-OMSCheckOut"/>
                                <node-display x="0" y="1"/>
                                <branch basename="b2" source-connector="ERROR">
                                  <transition target-connector="in">
                                    <transition-display>
                                      <bend-point relative-to="source" x="1" y="0"/>
                                    </transition-display>
                                  </transition>
                                  <segment>
                                    <node>
                                      <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                        <config-property key="Transactional" value="false"/>
                                        <key-binding alias="true" key="From_0"/>
                                        <key-binding alias="InvalidSDDBasket" key="To_0"/>
                                        <key-binding alias="null" key="From_2"/>
                                        <key-binding alias="null" key="To_2"/>
                                        <key-binding alias="null" key="From_3"/>
                                        <key-binding alias="null" key="To_3"/>
                                        <key-binding alias="null" key="From_4"/>
                                        <key-binding alias="null" key="To_4"/>
                                        <key-binding alias="null" key="From_5"/>
                                        <key-binding alias="null" key="To_5"/>
                                        <key-binding alias="null" key="From_6"/>
                                        <key-binding alias="null" key="To_6"/>
                                        <key-binding alias="null" key="From_7"/>
                                        <key-binding alias="null" key="To_7"/>
                                        <key-binding alias="null" key="From_8"/>
                                        <key-binding alias="null" key="To_8"/>
                                        <key-binding alias="null" key="From_9"/>
                                        <key-binding alias="null" key="To_9"/>
                                      </pipelet-node>
                                      <node-display orientation="horizontal" x="1" y="0"/>
                                    </node>
                                    <simple-transition>
                                      <transition-display>
                                        <bend-point relative-to="source" x="1" y="0"/>
                                      </transition-display>
                                    </simple-transition>
                                    <node>
                                      <jump-node start-name-ref="Cart-Show"/>
                                      <node-display orientation="horizontal" x="1" y="0"/>
                                    </node>
                                  </segment>
                                </branch>
                              </node>
                              <simple-transition/>
                              <node>
                                <jump-node start-name-ref="COBilling-Start"/>
                                <node-display x="0" y="1"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                      </segment>
                    </branch>
                    <branch basename="b3" source-connector="selectAddress">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="target" x="0" y="-1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <jump-node start-name-ref="COShipping-UpdateAddressDetails"/>
                          <node-display x="0" y="2"/>
                        </node>
                      </segment>
                    </branch>
                    <branch basename="b4" source-connector="selectAddressformgr">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="target" x="0" y="-1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.Id.value" key="From_0"/>
                            <key-binding alias="AddressId" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="-1" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node pipelet-name="GetCustomerAddress" pipelet-set-identifier="bc_api">
                            <key-binding alias="AddressId" key="AddressID"/>
                            <key-binding alias="Address" key="Address"/>
                            <key-binding alias="CurrentCustomer" key="Customer"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="error">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="1" y="0"/>
                                <bend-point relative-to="target" x="0" y="-1"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <jump-node start-name-ref="LoginBarrier-SaveReferrer"/>
                                <node-display x="1" y="1"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                            <config-property key="Clear" value="false"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields" key="Form"/>
                            <key-binding alias="Address" key="Object"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="Address.stateCode" key="From_0"/>
                            <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.states.state.value" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <call-node start-name-ref="COShipping-HandleShippingSettings"/>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <call-node start-name-ref="COShipping-SaveAddress"/>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="target" x="0" y="-1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="true"/>
                            <config-property key="OnError" value="PIPELET_ERROR"/>
                            <config-property key="ScriptFile" value="account/addressbook/SetDefaultAddress.ds"/>
                            <key-binding alias="ScriptLog" key="ScriptLog"/>
                            <key-binding alias="!empty(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) ?CurrentCustomer.profile.getAddressBook().getAddress(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) :CurrentCustomer.profile.getAddressBook().getPreferredAddress()" key="CustomerAddress"/>
                            <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
                            <key-binding alias="Basket" key="Basket"/>
                          </pipelet-node>
                          <node-display x="-1" y="1"/>
                          <branch basename="b3" source-connector="error">
                            <transition target-connector="in"/>
                            <segment>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="dw.web.Resource.msg('address.data.addrlabelerror','account',null)" key="From_0"/>
                                  <key-binding alias="ShippingAddrError" key="To_0"/>
                                  <key-binding alias="null" key="From_1"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <transition target-connector="in1" target-path="../..">
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                  <bend-point relative-to="target" x="-1" y="9"/>
                                  <bend-point relative-to="target" x="-1" y="0"/>
                                </transition-display>
                              </transition>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                            <bend-point relative-to="target" x="0" y="-1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <call-node start-name-ref="COShipping-UpdateInStoreMessage"/>
                          <node-display x="1" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <jump-node start-name-ref="COBilling-Start"/>
                          <node-display x="0" y="1"/>
                        </node>
                      </segment>
                    </branch>
                    <branch basename="b5" source-connector="shipToMultiple">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="target" x="-1" y="0"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <jump-node start-name-ref="COShippingMultiple-Start"/>
                          <node-display orientation="horizontal" x="1" y="2"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="./+1">
                    <transition-display>
                      <bend-point relative-to="source" x="2" y="-2"/>
                    </transition-display>
                  </transition>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="-2"/>
                  </node>
                  <transition target-connector="in1" target-path="./-1"/>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-Start"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
        <branch basename="b4" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="COShippingMultiple-Start"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Starting point for single shipping scenario</description>
        </text-node>
        <node-display x="1" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetShippingAddress">
    <segment>
      <node>
        <start-node call-mode="private" name="GetShippingAddress" secure="false"/>
        <node-display x="5" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="account/addressbook/GetShippingAddresses.ds"/>
          <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
          <key-binding alias="ShippingAddresses" key="ShippingAddresses"/>
          <key-binding alias="SortedAddress" key="SortedAddress"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_5">
    <segment>
      <node>
        <text-node>
          <description>Initializes the address and shipping method form:
- prepopulates form with shipping address of default shipment if address exists, otherwise
- preselects shipping method in list if set at shipment</description>
        </text-node>
        <node-display width="2" x="7" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>Select a shipping method for the default shipment. Sets the shipping method and returns the result as JSON response.</description>
        </text-node>
        <node-display x="11" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>Determine the list of applicable shipping methods for the default shipment of the current  basket.  The applicable shipping methods are based on the merchandise in the cart and the address parameters included in the request (if any).  Change the shipping method of this shipment if the current method is no longer applicable.  Pre-calculate the shipping cost for each applicable shipping method by simulating the shipping selection i.e. explicitly add each shipping method and then calculate cart (to get cost and discounts/promotions).  The simulation is done so that shipping cost along with discounts and promotions can be shown to the user before making a selection.</description>
        </text-node>
        <node-display height="2" width="2" x="15" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_8">
    <segment>
      <node>
        <text-node>
          <description>Determine the list of applicable shipping methods for the default shipment of the current customer's basket and return the response as a JSON array.  The applicable shipping methods are based on the merchandise in the cart and any address parameters included in the request parameters.</description>
        </text-node>
        <node-display width="2" x="19" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_9">
    <segment>
      <node>
        <text-node>
          <description>Redirect to multi shipping scenario if more than one physical shipment is contained in the basket.</description>
        </text-node>
        <node-display x="1" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="InitForms">
    <segment>
      <node>
        <start-node call-mode="private" name="InitForms" secure="false"/>
        <node-display x="7" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Basket.defaultShipment.shippingAddress != null" condition-operator="expr"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields" key="Form"/>
                <key-binding alias="!empty(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) ?CurrentCustomer.profile.getAddressBook().getAddress(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) :CurrentCustomer.profile.getAddressBook().getPreferredAddress()" key="Object"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Bind stateCode to sub form group" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.states" key="Form"/>
                <key-binding alias="!empty(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) ?CurrentCustomer.profile.getAddressBook().getAddress(CurrentForms.singleshipping.shippingAddress.addressFields.Id.value) :CurrentCustomer.profile.getAddressBook().getPreferredAddress()" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Prepopulate gift options" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress" key="Form"/>
                <key-binding alias="Basket.defaultShipment" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in3" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Prepopulate shipping method seletion with shipment shipping method" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Basket.defaultShipment.shippingMethodID" key="From_0"/>
          <key-binding alias="CurrentForms.singleshipping.shippingAddress.shippingMethodID.value" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="SelectShippingMethod">
    <segment>
      <node>
        <start-node name="SelectShippingMethod" secure="false"/>
        <node-display x="11" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/GetApplicableShippingMethods.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentShippingMethod.ID" key="ShippingMethodID"/>
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="ApplicableShippingMethods" key="ShippingMethods"/>
          <key-binding alias="CurrentHttpParameterMap.city.stringValue" key="City"/>
          <key-binding alias="CurrentHttpParameterMap.countryCode.stringValue" key="Country"/>
          <key-binding alias="CurrentHttpParameterMap.postalCode.stringValue" key="PostalCode"/>
          <key-binding alias="CurrentHttpParameterMap.stateCode.stringValue" key="State"/>
          <key-binding alias="CurrentHttpParameterMap.address1.stringValue" key="Address1"/>
          <key-binding alias="CurrentHttpParameterMap.address2.stringValue" key="Address2"/>
          <key-binding alias="ShippingMethodToAssign" key="ShippingMethodToAssign"/>
          <key-binding alias="CurrentCustomer.profile.addressBook.preferredAddress.custom.comdiv" key="comdiv"/>
          <key-binding alias="CurrentCustomer.profile.addressBook.preferredAddress.custom.shipZone" key="shipZone"/>
          <key-binding alias="CurrentCustomer.profile.custom.activeShipAddressID" key="activeShipID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in2" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/UpdateShipmentShippingMethod.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentHttpParameterMap.shippingMethodID.stringValue" key="ShippingMethodID"/>
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="ApplicableShippingMethods" key="ShippingMethods"/>
          <key-binding alias="ShippingMethodToAssign" key="ShippingMethod"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in2" target-path="../+1">
              <transition-display>
                <bend-point relative-to="target" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-Calculate"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CalculateFromCart)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="checkout/shipping/selectshippingmethodjson"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateShippingMethodList">
    <segment>
      <node>
        <start-node name="UpdateShippingMethodList" secure="false"/>
        <node-display x="15" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display x="-1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/GetApplicableShippingMethods.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentShippingMethod.ID" key="ShippingMethodID"/>
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="ApplicableShippingMethods" key="ShippingMethods"/>
          <key-binding alias="CurrentHttpParameterMap.city.stringValue" key="City"/>
          <key-binding alias="CurrentHttpParameterMap.countryCode.stringValue" key="Country"/>
          <key-binding alias="CurrentHttpParameterMap.postalCode.stringValue" key="PostalCode"/>
          <key-binding alias="CurrentHttpParameterMap.stateCode.stringValue" key="State"/>
          <key-binding alias="CurrentHttpParameterMap.address1.stringValue" key="Address1"/>
          <key-binding alias="CurrentHttpParameterMap.address2.stringValue" key="Address2"/>
          <key-binding alias="CurrentCustomer.profile.addressBook.preferredAddress.custom.shipZone" key="shipZone"/>
          <key-binding alias="ShippingMethodToAssign" key="ShippingMethodToAssign"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Remember selected shipping method." pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="new dw.util.HashMap()" key="From_0"/>
          <key-binding alias="ShippingCosts" key="To_0"/>
          <key-binding alias="Basket.defaultShipment.getShippingMethod() || dw.order.ShippingMgr.getDefaultShippingMethod()" key="From_1"/>
          <key-binding alias="CurrentShippingMethod" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1" transaction-control="begin"/>
    </segment>
    <segment>
      <node>
        <loop-node element-key="Method" iterator-key="ApplicableShippingMethods"/>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="checkout/UpdateShipmentShippingMethod.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Method.ID" key="ShippingMethodID"/>
                <key-binding alias="Basket.defaultShipment" key="Shipment"/>
                <key-binding alias="Method" key="ShippingMethod"/>
                <key-binding alias="ApplicableShippingMethods" key="ShippingMethods"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="./b3.1">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="true" key="From_0"/>
                <key-binding alias="CurrentSession.custom.SkipTaxCalculation" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="true" key="From_0"/>
                <key-binding alias="CurrentSession.custom.SkipTaxCalculation" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Cart-Calculate"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="checkout/PreCalculateShipping.ds"/>
                <key-binding alias="log" key="ScriptLog"/>
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="Method" key="Method"/>
                <key-binding alias="ShippingCosts" key="ShippingCosts"/>
                <key-binding alias="ShippingCost" key="ShippingCost"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1">
                    <transition-display>
                      <bend-point relative-to="target" x="2" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="false"/>
                <config-property key="Expression" value="ShippingCosts.put(Method.ID, ShippingCost)"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="-1" y="0"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition transaction-control="rollback">
        <transition-display>
          <bend-point relative-to="target" x="0" y="-2"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Restore selected shipping method." pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/UpdateShipmentShippingMethod.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentShippingMethod.ID" key="ShippingMethodID"/>
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="CurrentShippingMethod" key="ShippingMethod"/>
          <key-binding alias="ApplicableShippingMethods" key="ShippingMethods"/>
        </pipelet-node>
        <node-display x="2" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-Calculate"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Prepopulate shipping method seletion with shipment shipping method" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Basket.defaultShipment.shippingMethodID" key="From_0"/>
          <key-binding alias="CurrentForms.singleshipping.shippingAddress.shippingMethodID.value" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/shipping/shippingmethods"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetApplicableShippingMethodsJSON">
    <segment>
      <node>
        <start-node name="GetApplicableShippingMethodsJSON" secure="false"/>
        <node-display x="19" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/GetApplicableShippingMethods.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentShippingMethod.ID" key="ShippingMethodID"/>
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="ApplicableShippingMethods" key="ShippingMethods"/>
          <key-binding alias="CurrentHttpParameterMap.city.stringValue" key="City"/>
          <key-binding alias="CurrentHttpParameterMap.countryCode.stringValue" key="Country"/>
          <key-binding alias="CurrentHttpParameterMap.postalCode.stringValue" key="PostalCode"/>
          <key-binding alias="CurrentHttpParameterMap.stateCode.stringValue" key="State"/>
          <key-binding alias="CurrentHttpParameterMap.address1.stringValue" key="Address1"/>
          <key-binding alias="CurrentHttpParameterMap.address2.stringValue" key="Address2"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/shipping/shippingmethodsjson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_14">
    <segment>
      <node>
        <text-node>
          <description>Clean shipments.</description>
        </text-node>
        <node-display x="1" y="10"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateAddress">
    <segment>
      <node>
        <start-node name="UpdateAddress" secure="false"/>
        <node-display x="3" y="11"/>
      </node>
      <transition target-connector="in1" target-path="/Start.1/b3.1/b2.1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="source" x="-1" y="1"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_16">
    <segment>
      <node>
        <text-node>
          <description>Transaction controls are for fine tuning  the performance of the data base interactions when calculating shipping methods</description>
        </text-node>
        <node-display x="16" y="9"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>Go to billing step, if we have no product line items, but only gift certificates in the basket. Shipping step is not required.</description>
        </text-node>
        <node-display x="0" y="12"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_18">
    <segment>
      <node>
        <text-node>
          <description>Handles the selected shipping address and shipping method:
- copies the address details and gift options to the basket's default shipment
- set the selected shipping method at the default shipment</description>
        </text-node>
        <node-display width="3" x="7" y="14"/>
      </node>
    </segment>
  </branch>
  <branch basename="HandleShippingSettings">
    <segment>
      <node>
        <start-node call-mode="private" name="HandleShippingSettings" secure="false"/>
        <node-display x="7" y="15"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/CreateShipmentShippingAddress.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentForms.singleshipping.shippingAddress" key="AddressForm"/>
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="CurrentForms.singleshipping.shippingAddress" key="GiftOptionsForm"/>
          <key-binding alias="CurrentCustomer.profile.getAddressBook().getPreferredAddress()" key="Address"/>
          <key-binding alias="ShippingAddress" key="ShippingAddress"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/UpdateShipmentShippingMethod.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentForms.singleshipping.shippingAddress.shippingMethodID.value" key="ShippingMethodID"/>
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="ShippingMethodToAssign" key="ShippingMethod"/>
          <key-binding alias="ApplicableShippingMethods" key="ShippingMethods"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-Calculate"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cart/ValidateCartForCheckout.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="BasketStatus" key="BasketStatus"/>
          <key-binding alias="true" key="ValidateTax"/>
          <key-binding alias="EnableCheckout" key="EnableCheckout"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="next"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_20">
    <segment>
      <node>
        <text-node>
          <description>Prepares shipments by separating all gift certificate line items from product line items and creating one shipment per gift certificate to purchase. As second step empty shipments are removed. This start node can be called by any checkout step to clean existing shipments according to these conditions.</description>
        </text-node>
        <node-display width="2" x="11" y="14"/>
      </node>
    </segment>
  </branch>
  <branch basename="PrepareShipments">
    <segment>
      <node>
        <start-node call-mode="private" name="PrepareShipments" secure="false"/>
        <node-display x="11" y="15"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/UpdateGiftCertificateShipments.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/RemoveEmptyShipments.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COShipping-InStoreFormInit"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateNewAddressForcardHolder">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateNewAddressForcardHolder" secure="true"/>
        <node-display x="18" y="17"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="account/addressbook/CreateRandomAddressId.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="custAddrID" key="AddressId"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b4.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="('isAccountAutomationEnable' in dw.system.Site.current.preferences.custom &amp;&amp; dw.system.Site.current.preferences.custom.isAccountAutomationEnable)" condition-operator="expr"/>
        <node-display x="-1" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in2" target-path="./b5.1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Address-ValidateZipcode"/>
        <node-display x="1" y="1"/>
        <branch basename="b4" source-connector="ERROR">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="-1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
        <branch basename="b5" source-connector="OK">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition transaction-control="begin"/>
            <node>
              <pipelet-node pipelet-name="CreateCustomerAddress" pipelet-set-identifier="bc_api">
                <key-binding alias="&quot;tempID&quot;" key="AddressID"/>
                <key-binding alias="Address" key="Address"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <key-binding alias="CurrentCustomer.profile.getAddressBook().getAddress(&quot;tempID&quot;)" key="From_0"/>
                      <key-binding alias="Address" key="To_0"/>
                    </pipelet-node>
                    <node-display x="1" y="0"/>
                  </node>
                  <transition target-connector="in3" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;tempID&quot;" key="From_0"/>
                <key-binding alias="CurrentShippingAddress.Id.value" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="Sets address attributes" pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentShippingAddress" key="Form"/>
                <key-binding alias="Address" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in" transaction-control="rollback">
                  <transition-display>
                    <bend-point relative-to="target" x="-1" y="0"/>
                    <bend-point relative-to="target" x="-1" y="-1"/>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display x="2" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="UPDATE ADDRESS" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <description>Update the Address with the valid address data from the DAV and the Warehouse service</description>
                <config-property key="Transactional" value="true"/>
                <key-binding alias="AddressObject.address1" key="From_0"/>
                <key-binding alias="Address.address1" key="To_0"/>
                <key-binding alias="AddressObject.address2" key="From_1"/>
                <key-binding alias="Address.address2" key="To_1"/>
                <key-binding alias="AddressObject.city" key="From_2"/>
                <key-binding alias="Address.city" key="To_2"/>
                <key-binding alias="AddressObject.stateCode" key="From_3"/>
                <key-binding alias="Address.stateCode" key="To_3"/>
                <key-binding alias="AddressObject.countryCode" key="From_4"/>
                <key-binding alias="Address.countryCode" key="To_4"/>
                <key-binding alias="AddressObject.postalCode" key="From_5"/>
                <key-binding alias="Address.postalCode" key="To_5"/>
                <key-binding alias="Address.custom.comdiv" key="To_6"/>
                <key-binding alias="AddressInfoObject.WarehouseCode" key="From_7"/>
                <key-binding alias="Address.custom.warehouseCode" key="To_7"/>
                <key-binding alias="AddressInfoObject.DSC" key="From_8"/>
                <key-binding alias="Address.custom.dscNumber" key="To_8"/>
                <key-binding alias="'SHIP'" key="From_9"/>
                <key-binding alias="Address.custom.addressType" key="To_9"/>
                <key-binding alias="AddressInfoObject.ComDiv" key="From_6"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="RequestType" key="To_0"/>
                <key-binding alias="&quot;CREATE_ADDRESSS_INFORMATION&quot;" key="From_0"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="CRMSyncServices-DoCreateAddressRequestNew"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="Account-AccountSync"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="account/addressbook/SetDefaultAddress.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="Address" key="CustomerAddress"/>
                <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
                <key-binding alias="Basket" key="Basket"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="-1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display orientation="horizontal" x="1" y="-2"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="Cart-UpdateShippingAddress"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="Address.ID" key="From_0"/>
                <key-binding alias="CurrentShippingAddress.Id.value" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="ok"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_23">
    <segment>
      <node>
        <text-node>
          <description>Mark step as fulfilled.</description>
        </text-node>
        <node-display x="3" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_24">
    <segment>
      <node>
        <text-node>
          <description>Renders a form dialog to edit an address. The dialog is supposed to be opened by an Ajax request and ends in templates, which just trigger a certain JS event. The calling page of this dialog is responsible for handling these events.</description>
        </text-node>
        <node-display width="2" x="2" y="21"/>
      </node>
    </segment>
  </branch>
  <branch basename="EditAddress">
    <segment>
      <node>
        <start-node name="EditAddress" secure="true"/>
        <node-display x="2" y="22"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.shippingaddress" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetCustomerAddress" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.addressID.stringValue" key="AddressID"/>
          <key-binding alias="ShippingAddress" key="Address"/>
          <key-binding alias="CurrentCustomer" key="Customer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+2">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.shippingaddress" key="Form"/>
          <key-binding alias="ShippingAddress" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Bind stateCode to sub form group" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.shippingaddress.states" key="Form"/>
          <key-binding alias="ShippingAddress" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-continue-node secure="true" start-name="EditShippingAddress" transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/shipping/shippingaddressdetails"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="apply">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.shippingaddress" key="Form"/>
                <key-binding alias="ShippingAddress" key="Object"/>
              </pipelet-node>
              <node-display x="-1" y="2"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="./b3.1">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.shippingaddress.states" key="Form"/>
                <key-binding alias="ShippingAddress" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in2"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="0"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <jump-node start-name-ref="COShipping-EditAddressWithError"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="dw.system.Site.current.ID == 'CosmoProf-CA' &amp;&amp; ShippingAddress.postalCode.toString().indexOf(' ') == -1" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b4" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="ShippingAddress.postalCode.toString().replace(/(.{3})/g, '$1 ').trim()" key="From_0"/>
                      <key-binding alias="ShippingAddress.postalCode" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in2" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="components/dialog/dialogapply"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="remove">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="RemoveCustomerAddress" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.shippingaddress.object" key="Address"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
              </pipelet-node>
              <node-display x="1" y="2"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="-1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <jump-node start-name-ref="COShipping-EditAddressWithError"/>
                    <node-display orientation="horizontal" x="2" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="components/dialog/dialogdelete"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="-1"/>
      </node>
      <transition target-connector="in2" target-path="./-1"/>
    </segment>
  </branch>
  <branch basename="SaveAddress">
    <segment>
      <node>
        <start-node call-mode="private" name="SaveAddress" secure="false"/>
        <node-display x="7" y="22"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentCustomer.authenticated &amp;&amp; CurrentForms.singleshipping.shippingAddress.addToAddressBook.value" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="checkout/AddAddressToAddressBook.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CurrentCustomer.profile" key="Profile"/>
                <key-binding alias="Basket.defaultShipment.shippingAddress" key="OrderAddress"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="target" x="1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="dw.system.Site.current.ID == 'CosmoProf-CA' &amp;&amp; Basket.defaultShipment.shippingAddress.postalCode.toString().indexOf(' ') == -1" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <key-binding alias="Basket.defaultShipment.shippingAddress.postalCode.toString().replace(/(.{3})/g, '$1 ').trim()" key="From_0"/>
                <key-binding alias="Basket.defaultShipment.shippingAddress.postalCode" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="target" x="1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_27">
    <segment>
      <node>
        <text-node>
          <description>Attempts to save the used shipping address in the customer address book.</description>
        </text-node>
        <node-display x="8" y="21"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_28">
    <segment>
      <node>
        <text-node>
          <description>Checks if the basket requires a multi shipping checkout by determining the physical shipments of the basket. If more than one physical shipment is contained in the basket a multi shipping checkout is required. The node ends on named end nodes &quot;yes&quot; and &quot;no&quot; in order to communicates back to the calling node.</description>
        </text-node>
        <node-display width="2" x="11" y="21"/>
      </node>
    </segment>
  </branch>
  <branch basename="RequiresMultiShipping">
    <segment>
      <node>
        <start-node call-mode="private" name="RequiresMultiShipping" secure="false"/>
        <node-display x="11" y="22"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/GetPhysicalShipments.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="PhysicalShipments" key="Shipments"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(PhysicalShipments) &amp;&amp; PhysicalShipments.size() &gt; 1 &amp;&amp; dw.system.Site.getCurrent().getCustomPreferenceValue('enableMultiShipping')" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <end-node name="yes"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="no"/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateAddressDetails">
    <segment>
      <node>
        <start-node name="UpdateAddressDetails" secure="false"/>
        <node-display x="14" y="21"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="Cart-Show"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="account/addressbook/GetAddressCustomer.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="empty(CurrentHttpParameterMap.addressID.value)?CurrentHttpParameterMap.dwfrm_singleshipping_addressList.value:CurrentHttpParameterMap.addressID.value" key="AddressId"/>
          <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
          <key-binding alias="LookupCustomer" key="Customer"/>
          <key-binding alias="addressId" key="LookupId"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetCustomerAddress" pipelet-set-identifier="bc_api">
          <key-binding alias="addressId" key="AddressID"/>
          <key-binding alias="Address" key="Address"/>
          <key-binding alias="LookupCustomer" key="Customer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields" key="Form"/>
          <key-binding alias="Address" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Bind stateCode to sub form group" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.states" key="Form"/>
          <key-binding alias="Address" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Basket.defaultShipment.shippingAddress != null" condition-operator="expr"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="checkout/CreateShipmentShippingAddress.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress" key="AddressForm"/>
                <key-binding alias="Basket.defaultShipment" key="Shipment"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress" key="GiftOptionsForm"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="./+1"/>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <jump-node start-name-ref="COShipping-Start"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="EditAddressWithError">
    <segment>
      <node>
        <start-node call-mode="private" name="EditAddressWithError" secure="false"/>
        <node-display orientation="horizontal" x="1" y="27"/>
      </node>
      <transition target-connector="in1" target-path="/EditAddress.2"/>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_32">
    <segment>
      <node>
        <text-node>
          <description>Even if Service is down Check Out Flow should not stop.</description>
        </text-node>
        <node-display x="6" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="UnshippableProductOverLay">
    <segment>
      <node>
        <start-node name="UnshippableProductOverLay" secure="false"/>
        <node-display x="6" y="31"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Basket" key="From_0"/>
          <key-binding alias="LItemCtnr" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="LItemCtnr == null || (empty(LItemCtnr.productLineItems))" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in1" target-path="./b3.1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/pav/CheckUnshippableProduct.ds"/>
          <key-binding alias="custExclVal" key="CustomerExclusionVal"/>
          <key-binding alias="portalExclVal" key="PortalExclusionVal"/>
          <key-binding alias="zipExclVal" key="ZipExclusoinVal"/>
          <key-binding alias="UnshippableProducts" key="outArray"/>
          <key-binding alias="LItemCtnr" key="LIC"/>
          <key-binding alias="custNo" key="CustomerNumber"/>
          <key-binding alias="cCode" key="PortalCode"/>
          <key-binding alias="zipCode" key="ZipCode"/>
          <key-binding alias="wCode" key="warehouseCode"/>
          <key-binding alias="locale.value" key="Locale"/>
          <key-binding alias="CurrentHttpParameterMap.addressId.value" key="AddressId"/>
          <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="UnshippableProducts == null || empty(UnshippableProducts)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="yes">
          <transition target-connector="in3" target-path="./b5.1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cart/RemoveProductLineItemsFromCart.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
          <key-binding alias="UnshippableProducts" key="UnshippableProducts"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="-2" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="util/errorjson"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/outofstockproductoverlay"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_34">
    <segment>
      <node>
        <text-node>
          <description>Binds the store message from the user to the shipment.</description>
        </text-node>
        <node-display x="9" y="29"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_35">
    <segment>
      <node>
        <text-node>
          <description>Used to initialize the single shipping form with instore pick up shipments</description>
        </text-node>
        <node-display x="11" y="29"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateInStoreMessage">
    <segment>
      <node>
        <start-node call-mode="private" name="UpdateInStoreMessage" secure="false"/>
        <node-display x="9" y="30"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="dw.system.Site.getCurrent().getCustomPreferenceValue('enableStorePickUp')" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.singleshipping.inStoreShipments.shipments" key="Form"/>
                <key-binding alias="Basket.shipments" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <jump-node start-name-ref="Cart-Show"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="3" y="0"/>
          <bend-point relative-to="target" x="3" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="InStoreFormInit">
    <segment>
      <node>
        <start-node call-mode="private" name="InStoreFormInit" secure="false"/>
        <node-display x="11" y="30"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="dw.system.Site.getCurrent().getCustomPreferenceValue('enableStorePickUp')" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="checkout/storepickup/InStoreShipments.ds"/>
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="HomeDeliveries" key="homedeliveries"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <jump-node start-name-ref="Cart-Show"/>
                    <node-display orientation="horizontal" x="2" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.singleshipping.inStoreShipments.shipments" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.singleshipping.inStoreShipments.shipments" key="Form"/>
                <key-binding alias="Basket.shipments" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="true" key="From_0"/>
          <key-binding alias="HomeDeliveries" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="OutOfStcockProduct">
    <segment>
      <node>
        <start-node call-mode="private" name="OutOfStcockProduct" secure="false"/>
        <node-display x="2" y="33"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Basket" key="From_0"/>
          <key-binding alias="LItemCtnr" key="To_0"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="!empty(LItemCtnr.productLineItems)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="product/pav/CheckUnshippableProduct.ds"/>
                <key-binding alias="custExclVal" key="CustomerExclusionVal"/>
                <key-binding alias="portalExclVal" key="PortalExclusionVal"/>
                <key-binding alias="zipExclVal" key="ZipExclusoinVal"/>
                <key-binding alias="UnshippableProducts" key="outArray"/>
                <key-binding alias="LItemCtnr" key="LIC"/>
                <key-binding alias="custNo" key="CustomerNumber"/>
                <key-binding alias="cCode" key="PortalCode"/>
                <key-binding alias="zipCode" key="ZipCode"/>
                <key-binding alias="wCode" key="warehouseCode"/>
                <key-binding alias="locale.value" key="Locale"/>
                <key-binding alias="CurrentShippingAddress.Id.value" key="AddressId"/>
                <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="!empty(UnshippableProducts)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="cart/RemoveProductLineItemsFromCart.ds"/>
                      <key-binding alias="null" key="ScriptLog"/>
                      <key-binding alias="Basket" key="Basket"/>
                      <key-binding alias="CurrentCustomer" key="CurrentCustomer"/>
                      <key-binding alias="UnshippableProducts" key="UnshippableProducts"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in1"/>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="1" y="0"/>
                        </node>
                        <transition target-connector="in1" target-path="../../../+1"/>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition/>
                  <node>
                    <end-node name="ok"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="ok"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
</pipeline>
