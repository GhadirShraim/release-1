<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to pass http parameters to a script that retrieves product objects and outputs an array of them. The pipeline then sends the array to an interaction node that displays the product grid.
Example code to use this pipeline within a content asset:
$include('Widgets-ProductBlock','pid','LUSTER6:GRAFIN2','blockSize','4')$</description>
        </text-node>
        <node-display width="3" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ProductBlock">
    <segment>
      <node>
        <start-node name="ProductBlock" secure="false"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.blockSize.toString()" key="From_0"/>
          <key-binding alias="bSize" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.pid.toString()" key="From_1"/>
          <key-binding alias="pList" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/OutputProductArray.ds"/>
          <key-binding alias="products" key="productArray"/>
          <key-binding alias="pList" key="productCSV"/>
          <key-binding alias="bSize" key="blockSize"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="components/widget/productgrid"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CustomerServiceNo">
    <segment>
      <node>
        <start-node name="CustomerServiceNo" secure="false"/>
        <node-display x="4" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="storelocator/customerserviceno"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ContentBlock">
    <segment>
      <node>
        <start-node name="ContentBlock" secure="false"/>
        <node-display x="6" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="blog/GetContentArray.ds"/>
          <key-binding alias="CurrentHttpParameterMap.blockSize.toString()" key="blockSize"/>
          <key-binding alias="CurrentHttpParameterMap.cid.toString()" key="cidString"/>
          <key-binding alias="contents" key="contentArray"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="gridSize" key="gridSize"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="components/widget/contentgrid"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
