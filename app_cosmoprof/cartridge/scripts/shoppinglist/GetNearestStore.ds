/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*  @input Customer : dw.customer.Customer
*  @input Lattitude : Number 
*  @input Longitude : Number 
*  @output Stores : dw.util.ArrayList;
*
*/
importPackage( dw.system );
importPackage( dw.web );
importPackage( dw.net );

function execute( args : PipelineDictionary ) : Number
{
	try {
		var httpClient : HTTPClient = new HTTPClient();
		var message : String;
		var storeList : dw.util.ArrayList = new dw.util.ArrayList();
		//Create a Request Object Based on Custoomer Longitude and lattitude
		var isDebugMode = 'shoppingListDebugMode' in dw.system.Site.current.preferences.custom ? dw.system.Site.current.preferences.custom.shoppingListDebugMode : false ;
		
		//If Debug mode is ON fetch Some random Geo Loacation Lattitude and longitude
		var currentCity, currentState, radius;
		if(isDebugMode) {
			//Get City and State
			currentCity = "Brick";
			currentState = "NJ";
		}
		else {
			currentCity = args.Customer.addressBook.preferredAddress.city;
			currentState = args.Customer.addressBook.preferredAddress.stateCode;
		}
		
		radius = 'radiusForStoreLocator' in dw.system.Site.current.preferences.custom ? dw.system.Site.current.preferences.custom.radiusForStoreLocator : "10";
		
		var reoseoURL : String = 'ReoSeoAPIURL' in dw.system.Site.current.preferences.custom ? dw.system.Site.current.preferences.custom.ReoSeoAPIURL : "" ;
		if(!empty(reoseoURL)) {
			//var queryparameter = "lat=" + args.Lattitude + "&lng" + args.Longitude;
			var queryparameter = "addr=" + currentCity + "," + currentState +"&rnum=" + radius;
			var url = reoseoURL + "?" + queryparameter;
			//Logger.info("[GetNearestStore.ds] Store Lacator URL:- " + encodeURI(url));
			//Send Request 
			 httpClient.open('GET', encodeURI(url));
			 httpClient.send();
			 if (httpClient.statusCode == 200)
			 {
			 	var storeDetail = JSON.parse(httpClient.text);
			 	
			      if(!empty(storeDetail)) {
			      	for each(let store in storeDetail) {
			      		storeList.add(store);
			     	}
			     	 args.Stores = storeList;
			      }
			 }
			 else
			 {
			     // error handling
			     message = "An error occurred with status code "+ httpClient.statusCode;
			     Logger.error("[GetNearestStore.ds] Erroe while calling Service- {0}", message);
			     return PIPELET_ERROR;
			 }
		}
		else {
			Logger.error("[GetNearestStore.ds] Store Lacator URL is missing in Site Preference.");
			 return PIPELET_ERROR;
		}
	}
	catch(e) {
		var error = e;
		Logger.error("[GetNearestStore.ds] Erroe while calling Service- {0}", e.message);
		return PIPELET_ERROR;
			
	}
	
  
    return PIPELET_NEXT;
}
