/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input Customer : dw.customer.Customer
*   @input ProductList : dw.customer.ProductList
*   @input FirstName : String
*   @input LastName : String   
*   @input Email : String
*   @input Phone : String   
*   @input CustomerNote : String
*   @input Store : Object ProductPrices
*   @input ProductPrices : Object
*   @output EmailData : Object
*
*/
importPackage( dw.system );
importPackage( dw.customer );
importPackage( dw.util );
importPackage( dw.catalog );

function execute( args : PipelineDictionary ) : Number
{

    try {
    	
    	var emailData = {};
    	
    	//Add From, To and Date and Time
    	emailData.from = 'shoppingListEmailSender' in dw.system.Site.current.preferences.custom ? dw.system.Site.current.preferences.custom.shoppingListEmailSender : "DONOTREPLY@COSMOPROFBEAUTY.COM";
    	emailData.bcc = 'bccShoppingListEmail' in dw.system.Site.current.preferences.custom ? dw.system.Site.current.preferences.custom.bccShoppingListEmail : "DONOTREPLY@COSMOPROFBEAUTY.COM";
    	
    	//Create the Store Email.
    	if(!empty(args.Store) && !empty(args.Store.country)) {
    		var countryCode = args.Store.country;
    	}
    	var emailDomainName = 'storeEmailDomainName' in dw.system.Site.current.preferences.custom ? dw.system.Site.current.preferences.custom.storeEmailDomainName : "";
    	
    	if(empty(emailDomainName)) {
    		throw("Email Domain Name was Emapty. Please configure in Site Preference.")
    	}
    	
    	var storeFid = args.Store.fid;
    	
    	var idTestMode = false;
    	var toAddress;
    	if('testShoppingList' in dw.system.Site.current.preferences.custom && dw.system.Site.current.preferences.custom.testShoppingList) {
    		//Get the address from Site Pref.
    		toAddress = 'testStoreEmail' in dw.system.Site.current.preferences.custom ? dw.system.Site.current.preferences.custom.testStoreEmail : "test@test.com";
    	} else {
    		toAddress = "Store"+storeFid+"@"+emailDomainName;
    	}
    	emailData.to = toAddress;
    	var cal : Calendar = new Calendar();
    	cal.setTimeZone("CST");
    	var shoppingDate = StringUtils.formatCalendar(cal, "MMMM dd, yyyy");
    	var shoppingTime = StringUtils.formatCalendar(cal, "h:mm a");
    	emailData.date = shoppingDate;
    	emailData.time = shoppingTime + " Central Time USA";
    	
    	//Customer Info
    	var customer : Customer = args.Customer;
    	emailData.cust = {};
    	emailData.cust.firstname = !empty(args.FirstName) ? args.FirstName : "";
    	emailData.cust.lastname = !empty(args.LastName) ? args.LastName : "";
    	emailData.cust.accountNo = !empty(customer.profile.custom.accountNumber) ? customer.profile.custom.accountNumber : "";
    	emailData.cust.cardNo = !empty(customer.profile.custom.cardNumber) ? customer.profile.custom.cardNumber : "";
    	emailData.cust.phoneNo = !empty( args.Phone ) ? args.Phone : customer.profile.phoneBusiness;
    	emailData.cust.email = !empty(args.Email) ? args.Email : customer.profile.email;
    	
    	//Store Data
    	var store = args.Store;
    	emailData.store = {};
    	emailData.store.fid = !empty(store.fid) ? "CosmoProf #"+store.fid : ""; 
    	emailData.store.address1 = !empty(store.address1) ? store.address1 : ""; 
    	emailData.store.address2 = !empty(store.address2) ? store.address2 : "";
    	emailData.store.city = !empty(store.city) ? store.city : "";
    	emailData.store.region = !empty(store.region) ? store.region : "";
    	emailData.store.postalCode = !empty(store.postalcode) ? store.postalcode : "";
    	emailData.store.phone = !empty(store.phone) ? store.phone : "";
    	var dierection = "https://maps.google.com/maps?hl=en&daddr=" + store.address1 + ' ';
    	if(!empty(store.address2)) {
    		dierection += store.address2 + ' ';
    	}
    	dierection += store.city + ' ' +  store.region + ' ' + store.postalcode
    	emailData.store.direction = dierection;
    	
    	//Tax Flag
    	
    	emailData.taxFlag = "Retail";
    	emailData.itemCount = args.ProductList.productItems.size();
    	
    	//Add Product list
    	emailData.productList = args.ProductList;
    	
    	//Total Price
    	var totalPriceObject = args.ProductPrices;
    	var totalPrice : Number = 0;
    	for each(var item in totalPriceObject) {
    		var price : String = item["price"].toString().replace(',','');
    		var quan : String = item["quan"];
    		totalPrice += (new Number(price) * new Number(quan));
    	}
    	emailData.listTotalPrice = totalPrice;
    	//Product Price Lookup
    	emailData.priceLookUp = totalPriceObject;
    	emailData.customerNote = args.CustomerNote;
    	
    	args.EmailData = emailData;
    }
    catch(e) {
    	var error = e;
    	Logger.error("[ShoppingListEmailData.ds] Error While Executing the Script: " + e.message);
    	return PIPELET_ERROR;
    }

    return PIPELET_NEXT;
}
