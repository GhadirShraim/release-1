/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @input OrderAddress : dw.order.OrderAddress
*-   @output ExampleOut : Number
*
*/


function execute( args : PipelineDictionary ) : Number
{

	var billingAddress : OrderAddress = args.OrderAddress;
	var iscompanyNameAvail =    'companyName' in billingAddress;  
    billingAddress.firstName =  replaceSpecialChar(billingAddress.firstName); 
    billingAddress.lastName  =  replaceSpecialChar(billingAddress.lastName);
    billingAddress.address1  =  replaceSpecialChar(billingAddress.address1);
    billingAddress.address2  =  replaceSpecialChar(billingAddress.address2);
    billingAddress.city      =  replaceSpecialChar(billingAddress.city);
    if (iscompanyNameAvail) {
        billingAddress.companyName =  replaceSpecialChar(billingAddress.companyName); 	
    }
   return PIPELET_NEXT;
}

function replaceSpecialChar(input) {
	var output = "";
	if (!empty(input)) {
	    var inputString = input.toString();
	    for (var i=0; i<inputString.length; i++) {
	        if (inputString.charCodeAt(i) <= 127) {
	            output += inputString.charAt(i);
	        }
	    }
	}	
    return !empty(input) ? output : input;
}