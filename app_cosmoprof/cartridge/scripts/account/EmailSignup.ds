/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input EmailOpt : String
*	@input CurrentCustomer : dw.customer.Customer
*	@input salesforceContactID : String
*   @output OutParams : Object
*	@output ErrorMsg : String
*
*/
importPackage( dw.system );
importPackage( dw.customer );
var ServiceRegistry = require('dw/svc').ServiceRegistry;

function execute( args : PipelineDictionary ) : Number
{

   try{
   		/*CP-637
		 <cus:customerType>C</cus:customerType>
         <cus:cardNumber>414458263530</cus:cardNumber>    
         <cus:email>hramakrishnan@sallybeauty.com</cus:email>
         <cus:directMailOptIn>1</cus:directMailOptIn>
          <cus:emailOptIn>0</cus:emailOptIn>
         <cus:mobileOptIn>0</cus:mobileOptIn>
	*/
	var params = {},
	profile : Profile = args.CurrentCustomer.profile;
	
	//params.customerType = "C";
	
	if('organizationName' in dw.system.Site.getCurrent().preferences.custom && dw.system.Site.getCurrent().getCustomPreferenceValue('organizationName')){
		params.sallyOrgName = dw.system.Site.getCurrent().getCustomPreferenceValue('organizationName');
		params.originatingSystem = dw.system.Site.getCurrent().getCustomPreferenceValue('organizationName');
    	params.changeSourceSystem = dw.system.Site.getCurrent().getCustomPreferenceValue('organizationName');		
	}
	
	params.primaryCardNumber = !empty(profile.custom.cardNumber) ? profile.custom.cardNumber.toString() : '';
	
	var billAddr : CustomerAddress = profile.getAddressBook().getAddress("-1");

    params.billingAddressLine1 = !empty(billAddr.address1) ? billAddr.address1 : '';

    params.billingAddressLine2 = !empty(billAddr.address2) ? billAddr.address2 : '';
    
    params.billingCityOrTown = !empty(billAddr.city) ? billAddr.city : '';
	
    params.billingZipOrPostalCode = !empty(billAddr.postalCode) ? billAddr.postalCode : '';
	
	params.emailAddress = !empty(profile.email) ? profile.email : '';
	
	params.mailOptIn = profile.custom.directMailOptIn ? true : false;
	//Choice for email Subscription	
	params.emailOptIn = (args.EmailOpt == "false") ? false : true;
	
	params.phoneMobileTextOptIn = profile.custom.mobileOptIn ? true : false;
	
	params.salesforceContactID = !empty(profile.custom.salesforceContactID) ? profile.custom.salesforceContactID : '';
	
	var emailRequest = JSON.stringify(params);
	
	//Call Save Profile Service.
	
	var synccustomerContact = require('int_cosmoprof_biztalk/cartridge/scripts/Azure/crmsyncservice/service/CustomerContactCRMSyncServiceInit.ds');
	
	var resultCreateContact = synccustomerContact.getCustomerContactService(emailRequest);
	//var service = ServiceRegistry.get('syncemailaddress');
		
	//var result = service.call(params);
	
	if('object' in resultCreateContact && 'status' in resultCreateContact && resultCreateContact.status == "OK"){
		return PIPELET_NEXT;
	}else{
		args.ErrorMsg = resultCreateContact.errorMessage;
		throw resultCreateContact.errorMessage;
	}

	return PIPELET_NEXT;
   
   }catch(e) {
   		var ex = e;
   		Logger.error("[EmailSignup.ds] Error occurred: " + e);
   		return PIPELET_ERROR;
   }
}
