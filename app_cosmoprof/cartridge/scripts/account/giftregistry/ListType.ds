/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input items : dw.util.Collection This is a sample comment.
*   @output dynamicType : Object
*
*/
importPackage( dw.system );
importPackage( dw.util );
var Logger : Logger = require("dw/system").Logger;
function execute( args : PipelineDictionary ) : Number
{
try{
   var listItems : Collection = args.items;
   var listItemsIter : Iterator = listItems.iterator();
   var dynamicTypesList : ArrayList = new ArrayList();
   var defalutObj : Object = new Object();
   defalutObj.optionid="Select";
   defalutObj.label="Select";
   defalutObj.value="Select";
   dynamicTypesList.push(defalutObj);
   while(listItemsIter.hasNext()){
   	var item = listItemsIter.next();
   	var uid = item.UUID;
   	var dynamicObj : Object =  new Object();
   	   dynamicObj.optionid=uid;
	   dynamicObj.label=item.name;
	   dynamicObj.value=uid;
   		dynamicTypesList.push(dynamicObj);
   }
   args.dynamicType = dynamicTypesList;
   return PIPELET_NEXT;
	}
catch ( e ) {
	Logger.error("ListType.ds: " + e);
	return PIPELET_ERROR;
	}

}
