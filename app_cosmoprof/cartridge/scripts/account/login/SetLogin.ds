/**
*   This script sets the customers login by using the non deprecated method dw.customer.Credentials.setLogin(newLogin : String , currentPassword : String ) : boolean 
*   @input Login : String User-Name of the current customer.
*   @input Password : String Password of the current customer.
*   @input CurrentCustomer : dw.customer.Customer Current customer.
*
*/

var Site : dw.system.Site = require('dw/system').Site;
var Logger : dw.system.Logger = require('dw/system').Logger;
var Customer : dw.customer.Customer = require('dw/customer').Customer;

function execute( args : PipelineDictionary ) : Number
{
	try {
		// Grab set of customer chain codes allowed to set login.
		var chainCodesAllowed : dw.util.ArrayList = Site.current.getCustomPreferenceValue('chainCodesAllowedToSetLogin');
		var customerChainCode : String = args.CurrentCustomer.profile.custom.chainCode;
		var chainCodeFound : Number;

		if ( !empty(chainCodesAllowed) && !empty(customerChainCode) ) 
		{
			chainCodeFound = chainCodesAllowed.indexOf(customerChainCode);
		} 
		
		if (args.CurrentCustomer != null &&  args.Login != null && (chainCodeFound != -1) && args.Password != null)
		{
			var loginSuccessful : Boolean = args.CurrentCustomer.profile.credentials.setLogin(args.Login, args.Password);

			if (!loginSuccessful)
			{
				return PIPELET_ERROR;
			} 
		}
		return PIPELET_NEXT;
	} catch (error) {
		var err = error;
		Logger.error('[SetLogin.ds] Error encountered during script: {0}', error.message);
		return PIPELET_ERROR;
	}
}
