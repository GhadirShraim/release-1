/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input UPC : String
*   @input Suggestions : Object
*   @output Product : dw.catalog.Product
*
*/
importPackage( dw.system );
importPackage( dw.catalog );

function execute( args : PipelineDictionary ) : Number
{
	try {
		var upc = args.UPC;
		//Loop Through all product and find the appropriate Product based on UPC.
		if (!empty(args.Suggestions) && args.Suggestions.products.count > 0) {
			var suggestedProductsItr = args.Suggestions.products.products;
			while(suggestedProductsItr.hasNext()) {
				var suggestedProd = suggestedProductsItr.next();
				var product = suggestedProd.productSearchHit.product;
				if ( !empty(product) && product.UPC == upc) {
					args.Product = product;
					break;
				}
			}
		}
		
	} catch(e) {
		Logger.error("Error while finding UPC in SearchUPCProducts.ds: " + e.message);
		return PIPELET_ERROR;
	
	}

   return PIPELET_NEXT;
}
