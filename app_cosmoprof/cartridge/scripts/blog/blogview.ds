/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*  @input currRequest : dw.system.Request This is a sample comment.
*  @output countNumber : Number This is simple comment.
*

*/
importPackage( dw.system );
importPackage( dw.object );
importPackage( dw.web );
importPackage( dw.util);

function execute( pdict : PipelineDictionary ) : Number { 
	
	 
	
	var cookies : dw.web.Cookies = pdict.currRequest.getHttpCookies();
	 
	//var cookies : Cookies = pdict.CurrentRequest.httpCookies;
	var urlParameter : HttpParameterMap = pdict.CurrentHttpParameterMap;
	var contentId : String = urlParameter.cid;
	var fdidExi : String = urlParameter.fdid;
	
	var viewlist;
	var isTrue : Boolean =false;
	var countView;
	var increamentByOne;
	var blogViewCount;
	var abc : Number;
	
	try{
		if(fdidExi=="blog-777")
		{
			var Donothing : String ="Do Nothing";
		}
		else{
			 if(!contentId.empty) {
					
						var startObj : CustomObject = CustomObjectMgr.getCustomObject("blogviewcount", contentId);
						
						if(empty(startObj)) {
							
							var viewCount : CustomObject = CustomObjectMgr.createCustomObject("blogviewcount", contentId);
							var viewCount : CustomObject = CustomObjectMgr.getCustomObject("blogviewcount", contentId);
							 viewCount.custom.blogviewcounter = 1;
							 
						} else {
							var viewCount : CustomObject = CustomObjectMgr.getCustomObject("blogviewcount", contentId);
							var count : Number = viewCount.custom.blogviewcounter;
							blogViewCount =  new Number(!empty(count) ? count : 0);
							increamentByOne = blogViewCount + 1;
							
							if(!empty(cookies["viewBlogsList"]) && (cookies["viewBlogsList"].value) && (cookies["viewBlogsList"].value).toString().indexOf(contentId) == -1) {
								viewCount.custom.blogviewcounter = increamentByOne;
							}
						  
						} 
						
						if(!empty(cookies["viewBlogsList"]) && (cookies["viewBlogsList"].value)) {
						 	var cookieStr = cookies["viewBlogsList"].value.toString() ;
						 	if(empty(cookieStr)) {
						 		setCookie("viewBlogsList", contentId);
						 	}
						 	if(!empty(cookieStr) && cookieStr.indexOf(contentId) == -1) {
						 		setCookie(cookies["viewBlogsList"].name,cookies["viewBlogsList"].value.toString()+"||"+contentId);
						 	}
						} else {
							
							setCookie("viewBlogsList", contentId);
						}
					}
			 
		  }
		
		} catch(Error) {
				Logger.error("message:"+Error);
	}
   return PIPELET_NEXT;
}

function setCookie(cookieName: String, name : String){
	 
  var cookie : Cookie = new dw.web.Cookie(cookieName, name);
  cookie.setMaxAge(999999);
  cookie.setPath("/");
  response.addHttpCookie(cookie);
                  

}
