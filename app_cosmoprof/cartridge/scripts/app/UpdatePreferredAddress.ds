/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input CurrentCustomer : dw.customer.Customer
*
*/
importPackage( dw.system );
importPackage( dw.customer );
function execute( args : PipelineDictionary ) : Number
{

    try {
		var customer : Customer = args.CurrentCustomer;
		var addressBook : AddressBook = customer.profile.addressBook;
		var activeShippingAddres = 'activeShipAddressID' in customer.profile.custom && !empty(customer.profile.custom.activeShipAddressID) ? customer.profile.custom.activeShipAddressID : "";
		if (!empty(activeShippingAddres)) {
			var getActiveAddr =  customer.getAddressBook().getAddress(activeShippingAddres);
			addressBook.setPreferredAddress(getActiveAddr);
		}
    } catch(e) {
    	Logger.error("Error while updating Preferred Address : " + e.message);
    	return PIPELET_ERROR;
    }

   return PIPELET_NEXT;
}
